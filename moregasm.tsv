a^11	append head of register 1 to register 1
a$11	append rear of register 1 to register 1
a11	append register 1 to register 1
a%11	append torso of register 1 to register 1
a^12	append head of register 1 to register 2
a$12	append rear of register 1 to register 2
a12	append register 1 to register 2
a%12	append torso of register 1 to register 2
a^1B	append head of register 1 to auxiliary output
a$1B	append rear of register 1 to auxiliary output
a1B	append register 1 to auxiliary output
a%1B	append torso of register 1 to auxiliary output
a^1J	append head of register 1 to primary output
a$1J	append rear of register 1 to primary output
a1J	append register 1 to primary output
a%1J	append torso of register 1 to primary output
a^1N	append head of register 1 to memory output
a$1N	append rear of register 1 to memory output
a1N	append register 1 to memory output
a%1N	append torso of register 1 to memory output
a^21	append head of register 2 to register 1
a$21	append rear of register 2 to register 1
a21	append register 2 to register 1
a%21	append torso of register 2 to register 1
a^22	append head of register 2 to register 2
a$22	append rear of register 2 to register 2
a22	append register 2 to register 2
a%22	append torso of register 2 to register 2
a^2B	append head of register 2 to auxiliary output
a$2B	append rear of register 2 to auxiliary output
a2B	append register 2 to auxiliary output
a%2B	append torso of register 2 to auxiliary output
a^2J	append head of register 2 to primary output
a$2J	append rear of register 2 to primary output
a2J	append register 2 to primary output
a%2J	append torso of register 2 to primary output
a^2N	append head of register 2 to memory output
a$2N	append rear of register 2 to memory output
a2N	append register 2 to memory output
a%2N	append torso of register 2 to memory output
aA1	append auxiliary input to register 1
a^A1	append head of auxiliary input to register 1
a$A1	append rear of auxiliary input to register 1
a%A1	append torso of auxiliary input to register 1
aA2	append auxiliary input to register 2
a^A2	append head of auxiliary input to register 2
a$A2	append rear of auxiliary input to register 2
a%A2	append torso of auxiliary input to register 2
aAB	append auxiliary input to auxiliary output
a^AB	append head of auxiliary input to auxiliary output
a$AB	append rear of auxiliary input to auxiliary output
a%AB	append torso of auxiliary input to auxiliary output
aAJ	append auxiliary input to primary output
a^AJ	append head of auxiliary input to primary output
a$AJ	append rear of auxiliary input to primary output
a%AJ	append torso of auxiliary input to primary output
aAN	append auxiliary input to memory output
a^AN	append head of auxiliary input to memory output
a$AN	append rear of auxiliary input to memory output
a%AN	append torso of auxiliary input to memory output
aB1	append auxiliary output to register 1
a^B1	append head of auxiliary output to register 1
a$B1	append rear of auxiliary output to register 1
a%B1	append torso of auxiliary output to register 1
aB2	append auxiliary output to register 2
a^B2	append head of auxiliary output to register 2
a$B2	append rear of auxiliary output to register 2
a%B2	append torso of auxiliary output to register 2
aBB	append auxiliary output to auxiliary output
a^BB	append head of auxiliary output to auxiliary output
a$BB	append rear of auxiliary output to auxiliary output
a%BB	append torso of auxiliary output to auxiliary output
aBJ	append auxiliary output to primary output
a^BJ	append head of auxiliary output to primary output
a$BJ	append rear of auxiliary output to primary output
a%BJ	append torso of auxiliary output to primary output
aBN	append auxiliary output to memory output
a^BN	append head of auxiliary output to memory output
a$BN	append rear of auxiliary output to memory output
a%BN	append torso of auxiliary output to memory output
a^I1	append head of primary input to register 1
aI1	append primary input to register 1
a$I1	append rear of primary input to register 1
a%I1	append torso of primary input to register 1
a^I2	append head of primary input to register 2
aI2	append primary input to register 2
a$I2	append rear of primary input to register 2
a%I2	append torso of primary input to register 2
a^IB	append head of primary input to auxiliary output
aIB	append primary input to auxiliary output
a$IB	append rear of primary input to auxiliary output
a%IB	append torso of primary input to auxiliary output
a^IJ	append head of primary input to primary output
aIJ	append primary input to primary output
a$IJ	append rear of primary input to primary output
a%IJ	append torso of primary input to primary output
a^IN	append head of primary input to memory output
aIN	append primary input to memory output
a$IN	append rear of primary input to memory output
a%IN	append torso of primary input to memory output
a^J1	append head of primary output to register 1
aJ1	append primary output to register 1
a$J1	append rear of primary output to register 1
a%J1	append torso of primary output to register 1
a^J2	append head of primary output to register 2
aJ2	append primary output to register 2
a$J2	append rear of primary output to register 2
a%J2	append torso of primary output to register 2
a^JB	append head of primary output to auxiliary output
aJB	append primary output to auxiliary output
a$JB	append rear of primary output to auxiliary output
a%JB	append torso of primary output to auxiliary output
a^JJ	append head of primary output to primary output
aJJ	append primary output to primary output
a$JJ	append rear of primary output to primary output
a%JJ	append torso of primary output to primary output
a^JN	append head of primary output to memory output
aJN	append primary output to memory output
a$JN	append rear of primary output to memory output
a%JN	append torso of primary output to memory output
a^M1	append head of memory input to register 1
aM1	append memory input to register 1
a$M1	append rear of memory input to register 1
a%M1	append torso of memory input to register 1
a^M2	append head of memory input to register 2
aM2	append memory input to register 2
a$M2	append rear of memory input to register 2
a%M2	append torso of memory input to register 2
a^MB	append head of memory input to auxiliary output
aMB	append memory input to auxiliary output
a$MB	append rear of memory input to auxiliary output
a%MB	append torso of memory input to auxiliary output
a^MJ	append head of memory input to primary output
aMJ	append memory input to primary output
a$MJ	append rear of memory input to primary output
a%MJ	append torso of memory input to primary output
a^MN	append head of memory input to memory output
aMN	append memory input to memory output
a$MN	append rear of memory input to memory output
a%MN	append torso of memory input to memory output
a^N1	append head of memory output to register 1
aN1	append memory output to register 1
a$N1	append rear of memory output to register 1
a%N1	append torso of memory output to register 1
a^N2	append head of memory output to register 2
aN2	append memory output to register 2
a$N2	append rear of memory output to register 2
a%N2	append torso of memory output to register 2
a^NB	append head of memory output to auxiliary output
aNB	append memory output to auxiliary output
a$NB	append rear of memory output to auxiliary output
a%NB	append torso of memory output to auxiliary output
a^NJ	append head of memory output to primary output
aNJ	append memory output to primary output
a$NJ	append rear of memory output to primary output
a%NJ	append torso of memory output to primary output
a^NN	append head of memory output to memory output
aNN	append memory output to memory output
a$NN	append rear of memory output to memory output
a%NN	append torso of memory output to memory output
c^11	copy head of register 1 to register 1
c$11	copy rear of register 1 to register 1
c11	copy register 1 to register 1
c%11	copy torso of register 1 to register 1
c^12	copy head of register 1 to register 2
c$12	copy rear of register 1 to register 2
c12	copy register 1 to register 2
c%12	copy torso of register 1 to register 2
c^1B	copy head of register 1 to auxiliary output
c$1B	copy rear of register 1 to auxiliary output
c1B	copy register 1 to auxiliary output
c%1B	copy torso of register 1 to auxiliary output
c^1J	copy head of register 1 to primary output
c$1J	copy rear of register 1 to primary output
c1J	copy register 1 to primary output
c%1J	copy torso of register 1 to primary output
c^1N	copy head of register 1 to memory output
c$1N	copy rear of register 1 to memory output
c1N	copy register 1 to memory output
c%1N	copy torso of register 1 to memory output
c^21	copy head of register 2 to register 1
c$21	copy rear of register 2 to register 1
c21	copy register 2 to register 1
c%21	copy torso of register 2 to register 1
c^22	copy head of register 2 to register 2
c$22	copy rear of register 2 to register 2
c22	copy register 2 to register 2
c%22	copy torso of register 2 to register 2
c^2B	copy head of register 2 to auxiliary output
c$2B	copy rear of register 2 to auxiliary output
c2B	copy register 2 to auxiliary output
c%2B	copy torso of register 2 to auxiliary output
c^2J	copy head of register 2 to primary output
c$2J	copy rear of register 2 to primary output
c2J	copy register 2 to primary output
c%2J	copy torso of register 2 to primary output
c^2N	copy head of register 2 to memory output
c$2N	copy rear of register 2 to memory output
c2N	copy register 2 to memory output
c%2N	copy torso of register 2 to memory output
cA1	copy auxiliary input to register 1
c^A1	copy head of auxiliary input to register 1
c$A1	copy rear of auxiliary input to register 1
c%A1	copy torso of auxiliary input to register 1
cA2	copy auxiliary input to register 2
c^A2	copy head of auxiliary input to register 2
c$A2	copy rear of auxiliary input to register 2
c%A2	copy torso of auxiliary input to register 2
cAB	copy auxiliary input to auxiliary output
c^AB	copy head of auxiliary input to auxiliary output
c$AB	copy rear of auxiliary input to auxiliary output
c%AB	copy torso of auxiliary input to auxiliary output
cAJ	copy auxiliary input to primary output
c^AJ	copy head of auxiliary input to primary output
c$AJ	copy rear of auxiliary input to primary output
c%AJ	copy torso of auxiliary input to primary output
cAN	copy auxiliary input to memory output
c^AN	copy head of auxiliary input to memory output
c$AN	copy rear of auxiliary input to memory output
c%AN	copy torso of auxiliary input to memory output
cB1	copy auxiliary output to register 1
c^B1	copy head of auxiliary output to register 1
c$B1	copy rear of auxiliary output to register 1
c%B1	copy torso of auxiliary output to register 1
cB2	copy auxiliary output to register 2
c^B2	copy head of auxiliary output to register 2
c$B2	copy rear of auxiliary output to register 2
c%B2	copy torso of auxiliary output to register 2
cBB	copy auxiliary output to auxiliary output
c^BB	copy head of auxiliary output to auxiliary output
c$BB	copy rear of auxiliary output to auxiliary output
c%BB	copy torso of auxiliary output to auxiliary output
cBJ	copy auxiliary output to primary output
c^BJ	copy head of auxiliary output to primary output
c$BJ	copy rear of auxiliary output to primary output
c%BJ	copy torso of auxiliary output to primary output
cBN	copy auxiliary output to memory output
c^BN	copy head of auxiliary output to memory output
c$BN	copy rear of auxiliary output to memory output
c%BN	copy torso of auxiliary output to memory output
c^I1	copy head of primary input to register 1
cI1	copy primary input to register 1
c$I1	copy rear of primary input to register 1
c%I1	copy torso of primary input to register 1
c^I2	copy head of primary input to register 2
cI2	copy primary input to register 2
c$I2	copy rear of primary input to register 2
c%I2	copy torso of primary input to register 2
c^IB	copy head of primary input to auxiliary output
cIB	copy primary input to auxiliary output
c$IB	copy rear of primary input to auxiliary output
c%IB	copy torso of primary input to auxiliary output
c^IJ	copy head of primary input to primary output
cIJ	copy primary input to primary output
c$IJ	copy rear of primary input to primary output
c%IJ	copy torso of primary input to primary output
c^IN	copy head of primary input to memory output
cIN	copy primary input to memory output
c$IN	copy rear of primary input to memory output
c%IN	copy torso of primary input to memory output
c^J1	copy head of primary output to register 1
cJ1	copy primary output to register 1
c$J1	copy rear of primary output to register 1
c%J1	copy torso of primary output to register 1
c^J2	copy head of primary output to register 2
cJ2	copy primary output to register 2
c$J2	copy rear of primary output to register 2
c%J2	copy torso of primary output to register 2
c^JB	copy head of primary output to auxiliary output
cJB	copy primary output to auxiliary output
c$JB	copy rear of primary output to auxiliary output
c%JB	copy torso of primary output to auxiliary output
c^JJ	copy head of primary output to primary output
cJJ	copy primary output to primary output
c$JJ	copy rear of primary output to primary output
c%JJ	copy torso of primary output to primary output
c^JN	copy head of primary output to memory output
cJN	copy primary output to memory output
c$JN	copy rear of primary output to memory output
c%JN	copy torso of primary output to memory output
c^M1	copy head of memory input to register 1
cM1	copy memory input to register 1
c$M1	copy rear of memory input to register 1
c%M1	copy torso of memory input to register 1
c^M2	copy head of memory input to register 2
cM2	copy memory input to register 2
c$M2	copy rear of memory input to register 2
c%M2	copy torso of memory input to register 2
c^MB	copy head of memory input to auxiliary output
cMB	copy memory input to auxiliary output
c$MB	copy rear of memory input to auxiliary output
c%MB	copy torso of memory input to auxiliary output
c^MJ	copy head of memory input to primary output
cMJ	copy memory input to primary output
c$MJ	copy rear of memory input to primary output
c%MJ	copy torso of memory input to primary output
c^MN	copy head of memory input to memory output
cMN	copy memory input to memory output
c$MN	copy rear of memory input to memory output
c%MN	copy torso of memory input to memory output
c^N1	copy head of memory output to register 1
cN1	copy memory output to register 1
c$N1	copy rear of memory output to register 1
c%N1	copy torso of memory output to register 1
c^N2	copy head of memory output to register 2
cN2	copy memory output to register 2
c$N2	copy rear of memory output to register 2
c%N2	copy torso of memory output to register 2
c^NB	copy head of memory output to auxiliary output
cNB	copy memory output to auxiliary output
c$NB	copy rear of memory output to auxiliary output
c%NB	copy torso of memory output to auxiliary output
c^NJ	copy head of memory output to primary output
cNJ	copy memory output to primary output
c$NJ	copy rear of memory output to primary output
c%NJ	copy torso of memory output to primary output
c^NN	copy head of memory output to memory output
cNN	copy memory output to memory output
c$NN	copy rear of memory output to memory output
c%NN	copy torso of memory output to memory output
d1	decode register 1
d2	decode register 2
dB	decode auxiliary output
dJ	decode primary output
dN	decode memory output
e1	evaluate register 1
e2	evaluate register 2
eB	evaluate auxiliary output
eJ	evaluate primary output
eN	evaluate memory output
j1	join register 1
j2	join register 2
jB	join auxiliary output
jJ	join primary output
jN	join memory output
n^1	negate head of register 1
n$1	negate rear of register 1
n1	negate register 1
n%1	negate torso of register 1
n^2	negate head of register 2
n$2	negate rear of register 2
n2	negate register 2
n%2	negate torso of register 2
nB	negate auxiliary output
n^B	negate head of auxiliary output
n$B	negate rear of auxiliary output
n%B	negate torso of auxiliary output
n^J	negate head of primary output
nJ	negate primary output
n$J	negate rear of primary output
n%J	negate torso of primary output
n^N	negate head of memory output
nN	negate memory output
n$N	negate rear of memory output
n%N	negate torso of memory output
nop	do nothing
p^11	prepend head of register 1 to register 1
p$11	prepend rear of register 1 to register 1
p11	prepend register 1 to register 1
p%11	prepend torso of register 1 to register 1
p^12	prepend head of register 1 to register 2
p$12	prepend rear of register 1 to register 2
p12	prepend register 1 to register 2
p%12	prepend torso of register 1 to register 2
p^1B	prepend head of register 1 to auxiliary output
p$1B	prepend rear of register 1 to auxiliary output
p1B	prepend register 1 to auxiliary output
p%1B	prepend torso of register 1 to auxiliary output
p^1J	prepend head of register 1 to primary output
p$1J	prepend rear of register 1 to primary output
p1J	prepend register 1 to primary output
p%1J	prepend torso of register 1 to primary output
p^1N	prepend head of register 1 to memory output
p$1N	prepend rear of register 1 to memory output
p1N	prepend register 1 to memory output
p%1N	prepend torso of register 1 to memory output
p^21	prepend head of register 2 to register 1
p$21	prepend rear of register 2 to register 1
p21	prepend register 2 to register 1
p%21	prepend torso of register 2 to register 1
p^22	prepend head of register 2 to register 2
p$22	prepend rear of register 2 to register 2
p22	prepend register 2 to register 2
p%22	prepend torso of register 2 to register 2
p^2B	prepend head of register 2 to auxiliary output
p$2B	prepend rear of register 2 to auxiliary output
p2B	prepend register 2 to auxiliary output
p%2B	prepend torso of register 2 to auxiliary output
p^2J	prepend head of register 2 to primary output
p$2J	prepend rear of register 2 to primary output
p2J	prepend register 2 to primary output
p%2J	prepend torso of register 2 to primary output
p^2N	prepend head of register 2 to memory output
p$2N	prepend rear of register 2 to memory output
p2N	prepend register 2 to memory output
p%2N	prepend torso of register 2 to memory output
pA1	prepend auxiliary input to register 1
p^A1	prepend head of auxiliary input to register 1
p$A1	prepend rear of auxiliary input to register 1
p%A1	prepend torso of auxiliary input to register 1
pA2	prepend auxiliary input to register 2
p^A2	prepend head of auxiliary input to register 2
p$A2	prepend rear of auxiliary input to register 2
p%A2	prepend torso of auxiliary input to register 2
pAB	prepend auxiliary input to auxiliary output
p^AB	prepend head of auxiliary input to auxiliary output
p$AB	prepend rear of auxiliary input to auxiliary output
p%AB	prepend torso of auxiliary input to auxiliary output
pAJ	prepend auxiliary input to primary output
p^AJ	prepend head of auxiliary input to primary output
p$AJ	prepend rear of auxiliary input to primary output
p%AJ	prepend torso of auxiliary input to primary output
pAN	prepend auxiliary input to memory output
p^AN	prepend head of auxiliary input to memory output
p$AN	prepend rear of auxiliary input to memory output
p%AN	prepend torso of auxiliary input to memory output
pB1	prepend auxiliary output to register 1
p^B1	prepend head of auxiliary output to register 1
p$B1	prepend rear of auxiliary output to register 1
p%B1	prepend torso of auxiliary output to register 1
pB2	prepend auxiliary output to register 2
p^B2	prepend head of auxiliary output to register 2
p$B2	prepend rear of auxiliary output to register 2
p%B2	prepend torso of auxiliary output to register 2
pBB	prepend auxiliary output to auxiliary output
p^BB	prepend head of auxiliary output to auxiliary output
p$BB	prepend rear of auxiliary output to auxiliary output
p%BB	prepend torso of auxiliary output to auxiliary output
pBJ	prepend auxiliary output to primary output
p^BJ	prepend head of auxiliary output to primary output
p$BJ	prepend rear of auxiliary output to primary output
p%BJ	prepend torso of auxiliary output to primary output
pBN	prepend auxiliary output to memory output
p^BN	prepend head of auxiliary output to memory output
p$BN	prepend rear of auxiliary output to memory output
p%BN	prepend torso of auxiliary output to memory output
p^I1	prepend head of primary input to register 1
pI1	prepend primary input to register 1
p$I1	prepend rear of primary input to register 1
p%I1	prepend torso of primary input to register 1
p^I2	prepend head of primary input to register 2
pI2	prepend primary input to register 2
p$I2	prepend rear of primary input to register 2
p%I2	prepend torso of primary input to register 2
p^IB	prepend head of primary input to auxiliary output
pIB	prepend primary input to auxiliary output
p$IB	prepend rear of primary input to auxiliary output
p%IB	prepend torso of primary input to auxiliary output
p^IJ	prepend head of primary input to primary output
pIJ	prepend primary input to primary output
p$IJ	prepend rear of primary input to primary output
p%IJ	prepend torso of primary input to primary output
p^IN	prepend head of primary input to memory output
pIN	prepend primary input to memory output
p$IN	prepend rear of primary input to memory output
p%IN	prepend torso of primary input to memory output
p^J1	prepend head of primary output to register 1
pJ1	prepend primary output to register 1
p$J1	prepend rear of primary output to register 1
p%J1	prepend torso of primary output to register 1
p^J2	prepend head of primary output to register 2
pJ2	prepend primary output to register 2
p$J2	prepend rear of primary output to register 2
p%J2	prepend torso of primary output to register 2
p^JB	prepend head of primary output to auxiliary output
pJB	prepend primary output to auxiliary output
p$JB	prepend rear of primary output to auxiliary output
p%JB	prepend torso of primary output to auxiliary output
p^JJ	prepend head of primary output to primary output
pJJ	prepend primary output to primary output
p$JJ	prepend rear of primary output to primary output
p%JJ	prepend torso of primary output to primary output
p^JN	prepend head of primary output to memory output
pJN	prepend primary output to memory output
p$JN	prepend rear of primary output to memory output
p%JN	prepend torso of primary output to memory output
p^M1	prepend head of memory input to register 1
pM1	prepend memory input to register 1
p$M1	prepend rear of memory input to register 1
p%M1	prepend torso of memory input to register 1
p^M2	prepend head of memory input to register 2
pM2	prepend memory input to register 2
p$M2	prepend rear of memory input to register 2
p%M2	prepend torso of memory input to register 2
p^MB	prepend head of memory input to auxiliary output
pMB	prepend memory input to auxiliary output
p$MB	prepend rear of memory input to auxiliary output
p%MB	prepend torso of memory input to auxiliary output
p^MJ	prepend head of memory input to primary output
pMJ	prepend memory input to primary output
p$MJ	prepend rear of memory input to primary output
p%MJ	prepend torso of memory input to primary output
p^MN	prepend head of memory input to memory output
pMN	prepend memory input to memory output
p$MN	prepend rear of memory input to memory output
p%MN	prepend torso of memory input to memory output
p^N1	prepend head of memory output to register 1
pN1	prepend memory output to register 1
p$N1	prepend rear of memory output to register 1
p%N1	prepend torso of memory output to register 1
p^N2	prepend head of memory output to register 2
pN2	prepend memory output to register 2
p$N2	prepend rear of memory output to register 2
p%N2	prepend torso of memory output to register 2
p^NB	prepend head of memory output to auxiliary output
pNB	prepend memory output to auxiliary output
p$NB	prepend rear of memory output to auxiliary output
p%NB	prepend torso of memory output to auxiliary output
p^NJ	prepend head of memory output to primary output
pNJ	prepend memory output to primary output
p$NJ	prepend rear of memory output to primary output
p%NJ	prepend torso of memory output to primary output
p^NN	prepend head of memory output to memory output
pNN	prepend memory output to memory output
p$NN	prepend rear of memory output to memory output
p%NN	prepend torso of memory output to memory output
r1	reverse register 1
r2	reverse register 2
rB	reverse auxiliary output
rJ	reverse primary output
rN	reverse memory output
s1	spell register 1
s2	spell register 2
sB	spell auxiliary output
sJ	spell primary output
sN	spell memory output
x1	decode register 1 and randomly choose word
x2	decode register 2 and randomly choose word
xB	decode auxiliary output and randomly choose word
xJ	decode primary output and randomly choose word
xN	decode memory output and randomly choose word
y1	randomly choose head or rear of register 1
y2	randomly choose head or rear of register 2
yB	randomly choose head or rear of auxiliary output
yJ	randomly choose head or rear of primary output
yN	randomly choose head or rear of memory output
z^1	zero head of register 1
z$1	zero rear of register 1
z1	zero register 1
z%1	zero torso of register 1
z^2	zero head of register 2
z$2	zero rear of register 2
z2	zero register 2
z%2	zero torso of register 2
zB	zero auxiliary output
z^B	zero head of auxiliary output
z$B	zero rear of auxiliary output
z%B	zero torso of auxiliary output
z^J	zero head of primary output
zJ	zero primary output
z$J	zero rear of primary output
z%J	zero torso of primary output
z^N	zero head of memory output
zN	zero memory output
z$N	zero rear of memory output
z%N	zero torso of memory output
